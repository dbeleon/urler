services:

  nginx:
    container_name: nginx-balancer
    build:
      context: ../.
      dockerfile: build/nginx.Dockerfile
    depends_on:
      - urler-1
      - urler-2
      - urler-3
    # command: sleep 4 # ожидаем 
    ports:
      - "5100:5100"
      - "8080:8080"
      - "8000:8000"
    restart: always

  urler-1:
   image: urler:latest
   container_name: urler-1
   restart: always
   depends_on:
     - urls-tnt-m
     - queue-tnt
   command: sleep 3 # ожидаем 
   ports:
     - 8081:8080
     - 8001:8000
     - 8881:8880
   volumes:
     - type: bind
       source: ../urler/env/compose/config.yaml
       target: /etc/urler/config.yaml
   build:
     dockerfile: build/urler.Dockerfile
     context: ../.

  urler-2:
   image: urler:latest
   container_name: urler-2
   restart: always
   depends_on:
     - urls-tnt-m
     - queue-tnt
   command: sleep 3 # ожидаем 
   ports:
     - 8082:8080
     - 8002:8000
     - 8882:8880
   volumes:
     - type: bind
       source: ../urler/env/compose/config.yaml
       target: /etc/urler/config.yaml
   build:
     dockerfile: build/urler.Dockerfile
     context: ../.

  urler-3:
   image: urler:latest
   container_name: urler-3
   restart: always
   depends_on:
     - urls-tnt-m
     - queue-tnt
   command: sleep 3 # ожидаем 
   ports:
     - 8083:8080
     - 8003:8000
     - 8883:8880
   volumes:
     - type: bind
       source: ../urler/env/compose/config.yaml
       target: /etc/urler/config.yaml
   build:
     dockerfile: build/urler.Dockerfile
     context: ../.

  qrer-1:
   image: qrer:latest
   container_name: qrer-1
   restart: always
   depends_on:
     - urls-tnt-m
     - queue-tnt
   command: sleep 3 # ожидаем 
   volumes:
     - type: bind
       source: ../qrer/env/compose/config.yaml
       target: /etc/qrer/config.yaml
   build:
     dockerfile: build/qrer.Dockerfile
     context: ../.

  qrer-2:
   image: qrer:latest
   container_name: qrer-2
   restart: always
   depends_on:
     - urls-tnt-m
     - queue-tnt
   command: sleep 3 # ожидаем 
   volumes:
     - type: bind
       source: ../qrer/env/compose/config.yaml
       target: /etc/qrer/config.yaml
   build:
     dockerfile: build/qrer.Dockerfile
     context: ../.

  notifier-1:
   image: notifier:latest
   container_name: notifier-1
   restart: always
   depends_on:
     - queue-tnt
   command: sleep 3 # ожидаем 
   volumes:
     - type: bind
       source: ../notifier/env/compose/config.yaml
       target: /etc/notifier/config.yaml
   build:
     dockerfile: build/notifier.Dockerfile
     context: ../.

  notifier-2:
   image: notifier:latest
   container_name: notifier-2
   restart: always
   depends_on:
     - queue-tnt
   command: sleep 3 # ожидаем 
   volumes:
     - type: bind
       source: ../notifier/env/compose/config.yaml
       target: /etc/notifier/config.yaml
   build:
     dockerfile: build/notifier.Dockerfile
     context: ../.

  urls-tnt-m:
    image: urls-tnt:latest
    container_name: urls-tnt-m
    restart: always
    ports:
      - 3301:3301
      - 3303:3303
      - 3380:3380
    volumes:
      - ./data/urls-tnt-m-data:/var/lib/tarantool
    environment:
      TARANTOOL_LISTEN: 0.0.0.0:3301
      TARANTOOL_WAL_DIR: /var/lib/tarantool
      TARANTOOL_MEMTX_DIR: /var/lib/tarantool
      TARANTOOL_VINYL_DIR: /var/lib/tarantool
      TARANTOOL_ADMIN_ADDR: 0.0.0.0:3303
      TARANTOOL_MEMTX_MEM: 2147483648
      TARANTOOL_IS_REPLICA: false
      TARANTOOL_REPLICATION_PASSWORD: pa$$w0rd
      USER_PASS: dev
      TARANTOOL_ALIAS: urls-tnt-m
    build:
      dockerfile: build/urls-tnt.Dockerfile
      context: ../.

  urls-tnt-r1:
    image: urls-tnt:latest
    container_name: urls-tnt-r1
    restart: always
    ports:
      - 3311:3301
      - 3313:3303
    volumes:
      - ./data/urls-tnt-r1-data:/var/lib/tarantool
    environment:
      TARANTOOL_LISTEN: 0.0.0.0:3301
      TARANTOOL_WAL_DIR: /var/lib/tarantool
      TARANTOOL_MEMTX_DIR: /var/lib/tarantool
      TARANTOOL_VINYL_DIR: /var/lib/tarantool
      TARANTOOL_ADMIN_ADDR: 0.0.0.0:3303
      TARANTOOL_MEMTX_MEM: 2147483648
      TARANTOOL_IS_REPLICA: true
      TARANTOOL_REPLICATION_PASSWORD: pa$$w0rd
      USER_PASS: dev
      TARANTOOL_ALIAS: urls-tnt-r1
    build:
      dockerfile: build/urls-tnt.Dockerfile
      context: ../.

  urls-tnt-r2:
    image: urls-tnt:latest
    container_name: urls-tnt-r2
    restart: always
    ports:
      - 3321:3301
      - 3323:3303
    volumes:
      - ./data/urls-tnt-r2-data:/var/lib/tarantool
    environment:
      TARANTOOL_LISTEN: 0.0.0.0:3301
      TARANTOOL_WAL_DIR: /var/lib/tarantool
      TARANTOOL_MEMTX_DIR: /var/lib/tarantool
      TARANTOOL_VINYL_DIR: /var/lib/tarantool
      TARANTOOL_ADMIN_ADDR: 0.0.0.0:3303
      TARANTOOL_MEMTX_MEM: 2147483648
      TARANTOOL_IS_REPLICA: true
      TARANTOOL_REPLICATION_PASSWORD: pa$$w0rd
      USER_PASS: dev
      TARANTOOL_ALIAS: urls-tnt-r2
    build:
      dockerfile: build/urls-tnt.Dockerfile
      context: ../.

  queue-tnt:
    image: queue-tnt:latest
    container_name: queue-tnt
    restart: always
    ports:
      - 3401:3301
      - 3403:3303
    volumes:
      - ./data/queue-tnt-data:/var/lib/tarantool
    environment:
      TARANTOOL_LISTEN: 0.0.0.0:3301
      TARANTOOL_WAL_DIR: /var/lib/tarantool
      TARANTOOL_MEMTX_DIR: /var/lib/tarantool
      TARANTOOL_VINYL_DIR: /var/lib/tarantool
      TARANTOOL_ADMIN_ADDR: 0.0.0.0:3303
      USER_PASS: dev
      TARANTOOL_ALIAS: queue-tnt
    build:
      dockerfile: build/queue-tnt.Dockerfile
      context: ../.

  prometheus:
    container_name: 'prometheus'
    image: prom/prometheus:v3.1.0
    ports:
      - 9090:9090
    volumes:
      - ./data/prometheus:/prometheus
      - ../prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ../prometheus/alerts.yml:/etc/prometheus/alerts.yml
    extra_hosts:
      - host.docker.internal:host-gateway
    # links:
    #   - alertmanager

  # alertmanager:
  #   container_name: 'alertmanager'
  #   image: prom/alertmanager
  #   ports:
  #     - 9099:9099
  #   volumes:
  #     - ../prometheus/alertmanager:/etc/alertmanager/
  #   restart: always
  #   environment:
  #     TZ: "Europe/Moscow"
  #   command:
  #     - '--config.file=/etc/alertmanager/alertmanager.yml'
  #     - '--storage.path=/etc/alertmanager/data'
  #     - '--web.listen-address=:9099'
      
  grafana:
    container_name: 'grafana'
    image: grafana/grafana:11.5.1
    ports:
      - 3000:3000
    volumes:
      - ./data/grafana:/var/lib/grafana
      - ../grafana/provisioning:/etc/grafana/provisioning/
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    restart: unless-stopped
    expose:
      - 3000
    labels:
      org.label-schema.group: "monitoring"
    links:
      - prometheus